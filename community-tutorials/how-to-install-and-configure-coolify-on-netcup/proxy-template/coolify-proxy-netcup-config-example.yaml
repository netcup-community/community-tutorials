networks:
  coolify:
    external: true
services:
  traefik:
    container_name: coolify-proxy
    image: "traefik:v2.10"
    restart: unless-stopped
    environment:
      - NETCUP_CUSTOMER_NUMBER=<YOUR-CUSTOMER-NUMBER>
      - NETCUP_API_KEY=<YOUR-API-KEY>
      - NETCUP_API_PASSWORD=<YOUR-API-PASSWORD>
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - coolify
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    healthcheck:
      test: "wget -qO- http://localhost:80/ping || exit 1"
      interval: 4s
      timeout: 2s
      retries: 5
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/data/coolify/proxy:/traefik"
    command:
      - "--ping=true"
      - "--ping.entrypoint=http"
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.http.http.encodequerysemicolons=true"
      - "--entrypoints.https.http.encodequerysemicolons=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/traefik/dynamic/"
      - "--providers.file.watch=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=netcup"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=0"
      - "--certificatesresolvers.letsencrypt.acme.storage=/traefik/acme.json"
      - "--providers.docker=true"
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=http
      - traefik.http.routers.traefik.middlewares=traefik-basic-auth@file
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik.tls.domains[0].main=example.com
      - traefik.http.routers.traefik.tls.domains[0].sans=*.example.com
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.gzip.compress=true
